{"ast":null,"code":"import _slicedToArray from \"/Users/gisturiz/Documents/jobboard/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gisturiz/Documents/jobboard/client/src/Jobs.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Job from './Job';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport JobModal from './JobModal';\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 400,\n    flexGrow: 1\n  }\n});\nexport default function Jobs({\n  jobs\n}) {\n  const classes = useStyles();\n  const theme = useTheme(); // modal\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState({}),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedJob = _React$useState4[0],\n        setJob = _React$useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // pagination\n\n\n  const numJobs = jobs.length;\n  const numPages = Math.ceil(numJobs / 50);\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        activeStep = _React$useState6[0],\n        setActiveStep = _React$useState6[1];\n\n  const jobsOnPage = jobs.slice(activeStep * 50, activeStep * 50 + 50);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"jobs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(JobModal, {\n    open: open,\n    job: selectedJob,\n    handleClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Entry Level Software Jobs\"), React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Found \", numJobs, \" Jobss\"), jobsOnPage.map((job, i) => React.createElement(Job, {\n    key: i,\n    job: job,\n    onClick: () => {\n      handleClickOpen();\n      setJob(job);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Page \", activeStep + 1, \" of \", numPages), React.createElement(MobileStepper, {\n    variant: \"progress\",\n    steps: numPages,\n    position: \"static\",\n    activeStep: activeStep,\n    className: classes.root,\n    nextButton: React.createElement(Button, {\n      size: \"small\",\n      onClick: handleNext,\n      disabled: activeStep === numPages - 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Next\", theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : React.createElement(KeyboardArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })),\n    backButton: React.createElement(Button, {\n      size: \"small\",\n      onClick: handleBack,\n      disabled: activeStep === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : React.createElement(KeyboardArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), \"Back\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/gisturiz/Documents/jobboard/client/src/Jobs.js"],"names":["React","makeStyles","useTheme","Typography","Job","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","JobModal","useStyles","root","maxWidth","flexGrow","Jobs","jobs","classes","theme","useState","open","setOpen","selectedJob","setJob","handleClickOpen","handleClose","numJobs","length","numPages","Math","ceil","activeStep","setActiveStep","jobsOnPage","slice","handleNext","prevActiveStep","handleBack","map","job","i","direction"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Job from './Job';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport JobModal from './JobModal';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 400,\n        flexGrow: 1,\n    },\n});\n\nexport default function Jobs({ jobs }) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    // modal\n    const [open, setOpen] = React.useState(false);\n    const [selectedJob, setJob] = React.useState({});\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    // pagination\n    const numJobs = jobs.length;\n    const numPages = Math.ceil(numJobs / 50)\n    const [activeStep, setActiveStep] = React.useState(0);\n    const jobsOnPage = jobs.slice(activeStep * 50, (activeStep * 50) + 50);\n\n    const handleNext = () => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(prevActiveStep => prevActiveStep - 1);\n    };\n\n    return (\n        <div>\n            <div className=\"jobs\">\n                <JobModal open={open} job={selectedJob} handleClose={handleClose}/>\n                <Typography variant=\"h4\" component=\"h1\">\n                    Entry Level Software Jobs\n            </Typography>\n                <Typography variant=\"h6\" component=\"h1\">\n                    Found {numJobs} Jobss\n            </Typography>\n                {\n                    jobsOnPage.map(\n                        (job, i) => <Job key={i} job={job} onClick={() => {\n                            handleClickOpen();\n                            setJob(job)\n                        }}/>\n                    )\n                }\n            </div>\n\n            <div>\n                Page {activeStep + 1} of {numPages}\n            </div>\n\n            <MobileStepper\n                variant=\"progress\"\n                steps={numPages}\n                position=\"static\"\n                activeStep={activeStep}\n                className={classes.root}\n                nextButton={\n                    <Button size=\"small\" onClick={handleNext} disabled={activeStep === numPages - 1}>\n                        Next\n                        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                    <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                        Back\n                    </Button>\n                }\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}